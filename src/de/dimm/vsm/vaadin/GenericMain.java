package de.dimm.vsm.vaadin;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.terminal.Sizeable;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Component;
import com.vaadin.ui.GridLayout;
import com.vaadin.ui.HorizontalLayout;
import com.vaadin.ui.HorizontalSplitPanel;
import com.vaadin.ui.MenuBar;
import com.vaadin.ui.NativeButton;

import com.vaadin.ui.TextField;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.Window;
import org.vaadin.jouni.animator.Animator;
import org.vaadin.jouni.animator.AnimatorProxy;




public abstract class GenericMain
{

    protected VerticalLayout mainLayout;
    protected HorizontalLayout statusBar;
    protected TextField txt_status2;
    protected TextField txt_status1;
    private HorizontalSplitPanel mainSplitter;
    private MenuBar menuBar_1;

    GridLayout headerGrid;
    Window root;
    AnimatorProxy animatorProxy;

    public Window getRoot()
    {
        return root;
    }

    public AnimatorProxy getAnimatorProxy()
    {
        return animatorProxy;
    }


    
    /*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

    /**
     * The constructor should first build the main layout, set the
     * composition root and then do any custom initialization.
     *
     * The constructor will not be automatically regenerated by the
     * visual editor.
     */
    public GenericMain(String itemname)
    {       
        
        buildMainLayout(itemname);
        
    }

    public MenuBar getMenuBar()
    {
        return menuBar_1;
    }

    public HorizontalSplitPanel getMainSplitter()
    {
        return mainSplitter;
    }

    public void setMainComponent(Component c)
    {
        mainSplitter.setSecondComponent(c);
    }
    public void setSideComponent(Component c, int sliderpos)
    {

        mainSplitter.setFirstComponent(c);
        mainSplitter.setSplitPosition(sliderpos, Sizeable.UNITS_PIXELS);       
    }
    public void setAppIcon(String app_icon)
    {
        NativeButton appIcon = new NativeButton();
        appIcon.setStyleName("appIcon");
        appIcon.setSizeFull();
        headerGrid.removeComponent( 0, 0);
        headerGrid.addComponent(appIcon, 0, 0);
        headerGrid.setComponentAlignment(appIcon, Alignment.TOP_LEFT);

    }
    public void setAppHeader(Component c)
    {        
        headerGrid.removeComponent(1, 0);
        headerGrid.addComponent(c, 1, 0);
        c.setHeight("100%");
        headerGrid.setComponentAlignment(c, Alignment.TOP_RIGHT);
    }

    private VerticalLayout buildMainLayout(String itemname )
    {

        // common part: create layout
        mainLayout = new VerticalLayout();
        mainLayout.setImmediate(false);
        mainLayout.setSizeFull();
        mainLayout.setSpacing(false);
        mainLayout.setMargin(false);

//        mainLayout.setWidth("100%");
//        mainLayout.setHeight("100%");
        

        root = new Window(itemname, mainLayout);
        animatorProxy = new AnimatorProxy();
        root.addComponent(animatorProxy);


        
        // top-level component properties
        /*mainLayout.setWidth("90.0%");
        mainLayout.setHeight("90.0%");
*/
        headerGrid = new GridLayout(2, 1);
        headerGrid.setSpacing(false);
        headerGrid.setMargin(false);
       // headerGrid.setSizeFull();
        headerGrid.setWidth("100%");
        headerGrid.setHeight("-1");
        headerGrid.setStyleName("headerGrid");
        mainLayout.addComponent(headerGrid);

        
        // menuBar_1
        menuBar_1 = new MenuBar();
        menuBar_1.setImmediate(false);
        menuBar_1.setWidth("100%");
        menuBar_1.setHeight("-1");

        mainLayout.addComponent(menuBar_1);
                   
        
        // mainSplitter
        mainSplitter = new HorizontalSplitPanel();
        mainSplitter.setImmediate(false);
        mainSplitter.setSizeFull();
 
        mainLayout.addComponent(mainSplitter);
        mainLayout.setExpandRatio(mainSplitter, 1.0f);
        
        // statusBar
        statusBar = buildStatusBar();
        mainLayout.addComponent(statusBar);
            
        return mainLayout;
    }
    
   
    public static String Txt( String k)
    {
        return de.dimm.vsm.Main.Txt( k );
    }


    @AutoGenerated
    private HorizontalLayout buildStatusBar()
    {
        // common part: create layout
        statusBar = new HorizontalLayout();
        statusBar.setImmediate(false);
        statusBar.setWidth("100%");
        statusBar.setHeight("-1px");
        statusBar.setMargin(false);
        
        // txt_status1
        txt_status1 = new TextField();
        txt_status1.setImmediate(false);
        txt_status1.setWidth("100%");
        txt_status1.setHeight("-1px");
        txt_status1.setSecret(false);
        statusBar.addComponent(txt_status1);
        statusBar.setExpandRatio(txt_status1, 1.0f);
        statusBar.setComponentAlignment(txt_status1, new Alignment(33));
        
        // txt_status2
        txt_status2 = new TextField();
        txt_status2.setImmediate(false);
        txt_status2.setWidth("100%");
        txt_status2.setHeight("-1px");
        txt_status2.setSecret(false);
        statusBar.addComponent(txt_status2);
        statusBar.setExpandRatio(txt_status2, 1.0f);
        statusBar.setComponentAlignment(txt_status2, new Alignment(33));
        
        return statusBar;
    }

    public abstract void exitApp();

}
